# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    types: [synchronize]

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-20.04

    steps:
      - name: Install OpenVPN
        run: |
          sudo apt update
          sudo apt install -y openvpn
      - name: Connect to VPN
        run: |
          echo "${{ secrets.OPEN_VPN_CONFIG }}" > config.ovpn
          sudo openvpn --config config.ovpn
          sleep 10
          echo "${{ secrets.SSH_PEM_KEY }}" > ssh.pem
          chmod 400 ssh.pem
          ssh -i ssh.pem ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}
          echo $PATH
          echo $SHELL
          echo `pwd`
          echo $USER
          echo $HOME
          echo `which java` || true
          echo `java --version` || true
          echo `java -version` || true
          echo `jenv --version` || true
          echo `mvn --version` || true
          echo `node -v` || true
      # - name: SSH deploy
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.SSH_HOST }}
      #     username: ${{ secrets.SSH_USERNAME }}
      #     key: ${{ secrets.SSH_PEM_KEY }}
      #     port: 22
      #     script: |
      #       echo $PATH
      #       echo $SHELL
      #       echo `pwd`
      #       echo $USER
      #       echo $HOME
      #       echo `which java` || true
      #       echo `java --version` || true
      #       echo `java -version` || true
      #       echo `jenv --version` || true
      #       echo `mvn --version` || true
      #       echo `node -v` || true
          
      # - name: Install dependencies
      #   run: |
      #     cd && cd hn-btms-user/
      #     git reset --hard HEAD
      #     git checkout main
      #     git pull origin main
      #     yarn

      # - name: Build the project
      #   run: |
      #     cd && cd hn-btms-user/
      #     yarn build

      # - name: Deploy to server
      #   run: |
      #     cd && cd hn-btms
      #     git reset --hard HEAD
      #     git checkout dev
      #     git pull origin dev
      #     cp ../hn-btms-user/dist/index.html src/main/webapp/WEB-INF/hbs/react-user.hbs
      #     rm -rf src/main/webapp/static/user/react
      #     cp -r ../hn-btms-user/dist/static/user/react src/main/webapp/static/user
      #     git add .
      #     git diff-index --quiet HEAD || git commit -m "[UPDATE] code deploy hn-btms-user"
      #     git push origin dev
      #     mvn package -P hn-front
      #     cp target/ROOT.war /app/servers/BTMS-front/webapps/
      #     cd /app/servers/BTMS-front/
      #     ./stop.sh || true
      #     sleep 2
      #     ./kill.sh || true
      #     sleep 2
      #     RUNNER_TRACKING_ID="" && ./start.sh
      #     sleep 2
